* SH CPU DisAssembler Ver 0.3 *
------------------------------------------------------------------------------
概要：
    日立ＳＨシリーズＣＰＵ用の逆アセンブラです。

------------------------------------------------------------------------------
使い方：
    dissh  -option  infile.bin outfile.asm
オプション：
          -s<address>  開始アドレスオフセットの指定
          -g<gbr>      デフォルトＧＢＲの値の指定
          -c           命令コード１６進表示の抑制
          -i           PC相対にある即値表示の抑制
          -r           命令の解説表示

------------------------------------------------------------------------------
特徴：
  ・ＤＯＳ汎用です。必要メモリーは約３８４ｋＢです。
  ・ソースフォーマットは日立方言（失礼）ではなく、ＧＮＵのアセンブラに
    近いものです。
  ・入力はバイナリーイメージ（ヘッダー無しのベタファイル）です。
  ・開始アドレス指定は -sオプションに続けて、空白を空けずに１６進で指定します。
  ・入力ファイルのサイズに制限はありません。
  ・入力ファイルと同じ名前で、拡張子が．ｍａｐのファイルが存在した場合、その
    ファイルをｍａｐファイルとみなして自動的に読込み、シンボルにします。
  ・ｍａｐファイルの形式は単純なテキストファイルで、
    <16進のアドレス>  <シンボル名称>
    という行からなるものです。これ以外の形式の行があっても無視します。
------------------------------------------------------------------------------
注意点：
  ・ＰＣ相対ロングワードフェッチされるワークエリアはロングワード(.long)で
    表示されます。
  ・シンボルの個数は１６０００個程度が限界ですが、シンボル名の保管エリアの
    サイズが６４ｋＢを越えられない制限が存在しますので実際にはその半分以下
    しかシンボルを読み込めません。シンボル数の上限チェックをさぼっています
    ので、巨大なシンボルファイルを読み込ませる場合は注意してください。
    （ｄｊｇｐｐで記述すれば良かったのですが、ｇｏ３２環境をｕｓｅｒに押し
      つけるのも難がありますから・・・）
  ・ニーモニックの前に -s- という記号が付くことが有りますが、これは遅延分岐
    命令の後ろに置かれた命令（遅延スロット）であることを表わします。
    つまり、分岐が起きた場合にも分岐命令の後ろの１命令は実行されてしまいます。
  ・ＧＢＲレジスタに固定のベースアドレスを入れて @(offset,gbr) でグローバル
    な変数やポートを参照している場合、 -gの直後にGBRにセットされた値と同じ
    値を指定することにより、offset部をシンボル表示にすることができます。
    ただし、そのシンボルのアドレスはｍａｐファイル中では絶対アドレスで指定
    してください。
------------------------------------------------------------------------------
雑談：
  ・何故、逆アセンブラが必要なのだろうか？
    なぜならば、そこにバイナリーはあるがソースがないからなのだ。（咲）
  ・ＳＨシリーズの石は、数少ない日本製オリジナルＣＰＵの一つですが、
    お世辞にも設計の良い石とは言えないと思います。どう見ても他のＲＩＳＣ
    （ＭＩＰＳ、ＰＯＷＥＲ、ＨＰＰＡ、Ａｌｐｈａ・・・）と比べると貧相す
    ぎます。この原因の一つは命令語長を１６ビットにケチったからだと思いま
    す。そのためオペランドのフィールドビットが極端に不足し、即値が８ビット
    あればいいほうだとか、レジスタ指定する余裕がない命令はＲ０のみしか操作
    できないだとか、レジスタオフセットが４ビットしかないとか・・・辛いです。
    （構造体アクセスとかどうするんだろう？）
    命令に３２ビットや１６ビットの即値を埋め込むことができないので、ＰＣ相対
    でフェッチしているところなどにも苦肉の策が見えます。
    （実は、このおかげで、普通の逆アセンブラソースはとても読めたものではあり
      ません。試しに -i 指定で使ってみるとわかります。）
  ・ほんとうはこんな石流行って欲しくないんですけどね〜、ｘ８６だってそうでした
    けど一旦はびこってしまったらしかたがないです。
  ・ＲＩＳＣだと思わないで、８ビットＣＰＵのレジスタが３２ビット拡張されて、
    １６本に増えて、ＤＳＰまで内蔵されたと思えば、ほら、幸せになったでしょ？
    Ｒ０レジスタがまるでアキュムレータに見えるし・・・
  ・Ｖ８１０のほうがずっとスマートだと思うんですけど、あれ、流行りませんね。
------------------------------------------------------------------------------
履歴：
  ver 0.1: from scratch.
  
  ver 0.2:
    remarkの付け方を変更して見やすくした.
    -g<gbr> オプションを追加した.
    jsr @Rn でRnの値が比較的確定している場合に remarkのところにそのアドレス
    か、シンボルが表示されるようにした.
    Ｃソースの書き方をＫ＆Ｒ流からＡＮＳＩに改め、warningが出ないようにした.
    その他bugを取った.

  ver 0.3:
    mov.l #nnnnnnnn,Rn 等で即値がシンボル名に置換されたときに"#"が消えるbug
    をfix.
    mova  のオペランドが評価されてしまうbugをfix.
------------------------------------------------------------------------------
転載：
  ・転載、改造は自由ですが、改造されたものを配布される場合はソースファイル
    込みで配布されることを希望します。

------------------------------------------------------------------------------
免責：
  ・制作者は本プログラムの実行結果に対する責任を一切負いません。本プログラムの
    使用、変更等は、各自責任で行なってください。

